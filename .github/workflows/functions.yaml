name: Functions deploy test

# Allow workflow to be triggered manually.
#   https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
on:
  workflow_dispatch:
#  schedule:
#    # Run the action every 2 hours.
#    # * is a special character in YAML so you have to quote this string
#    - cron: "0 */2 * * *"

permissions:
  contents: read

concurrency:
  # Limit at most 1 runs
  group: functions-deploy-${{ github.ref }}

env:
  CI: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.CF3_INTEGRATION_TEST_GOOGLE_CREDENTIALS }}"
          create_credentials_file: true

      - run: npm ci

      - name: "Test function deploy"
        run: npm run test:functions-deploy

      - name: Print debug logs
        if: failure()
        run: find . -type f -name "*debug.log" | xargs cat
            - 名稱：安裝 .NET Core SDK
  用途：actions/setup-dotnet@v3.4.2
  和：
    # 可選使用的 SDK 版本。如果未提供，則將在可用時安裝 global.json 版本。例：2.2.104、3.1、3.1.x、3.x、6.0.2xx
    dotnet-version: # 可選
    # 可選的建造品質。可能的值有：daily、signed、validated、preview、ga。
    dotnet-quality: # 可選
    # 可選的 global.json 位置，如果您的 global.json 不在 repo 的根目錄中。
    全域 JSON 檔案：# 可選
    # 可選的套件來源，用於設定身份驗證。將查閱 repo 根目錄中任何現有的 NuGet.config，並使用 NUGET_AUTH_TOKEN 環境變數作為 ClearTextPassword 提供臨時的 NuGet.config
    來源 URL: # 可選
    # 可選的 OWNER，用於使用來自 GitHub Package Registry 組織/使用者（而不是目前儲存庫的擁有者）的套件。僅當來源 URL 中也提供了 GPR URL 時才使用
    所有者：#可選
    # 可選的 NuGet.config 位置，如果您的 NuGet.config 不在 repo 的根目錄中。
    設定檔：#可選
    # 可選輸入，用於啟用 NuGet 全域包資料夾的快取
    快取：#可選
    # 用於指定依賴檔案的路徑：packages.lock.json。支援通配符或檔案名稱清單來快取多個相依性。
    快取依賴路徑：#可選
            - 名稱：設定 Node.js 環境
  用途：actions/setup-node@v3.9.1
  和：
    # 在 npmrc 中設定 always-auth。
    always-auth: # 可選，預設為 false
    # 要使用的版本的版本規格。範例：12.x、10.15.1、>=10.15.0。
    節點版本：#可選
    # 包含要使用的版本的版本規範的檔案。範例：.nvmrc、.node-version、.tool-versions。
    node-version-file: #可選
    # Node 使用的目標架構。範例：x86、x64。將預設使用系統架構。
    架構：#可選
    # 如果您希望操作檢查符合版本規範的最新可用版本，請設定此選項。
    檢查最新：#可選
    # 為授權設定的可選註冊表。將在專案級 .npmrc 和 .yarnrc 檔案中設定登錄，並設定從 env.NODE_AUTH_TOKEN 讀取的驗證。
    registry-url: #可選
    # 針對範圍註冊表進行身份驗證的可選範圍。使用 GitHub Packages 註冊表（https://npm.pkg.github.com/）時將回退至儲存庫擁有者。
    範圍：#可選
    # 用於從節點版本中提取節點分佈。由於存在預設值，因此使用者通常不會提供該預設值。在 github.com 上執行此操作時，預設值就足夠了。在 GHES 上運行時，如果您遇到速率限制，您可以傳遞 github.com 的個人存取權杖。
    token: # 可選，預設為 ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # 用於指定在預設目錄中進行快取的套件管理器。支援的值：npm、yarn、pnpm。
    快取：#可選
    # 用於指定依賴檔案的路徑：package-lock.json、yarn.lock 等。支援通配符或檔案名稱列表，用於快取多個相依性。
    快取依賴路徑：#可選

          
          
