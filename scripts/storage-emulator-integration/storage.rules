rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /topLevel {
      allow list;
    }

    match /testing/{allPaths=**} {
      allow read, create, update, delete: if request.auth != null;
    }

    match /listAll/{allPaths=**} {
      allow list;
    }

    match /pathTests/{allPaths=**} {
      // Test that request.path is relative to the service (firebase.storage) 
      allow list: if request.path[0] == "b" &&
        // Skip matching bucket to allow for bucket overrides when targeting prod.
        request.path[2] == "o" &&
        request.path[3] == "pathTests" &&
        request.path[4] == "dir" &&
        request.path[5] == "subdir";
    }

    match /delete {
      match /disallowIfContentTypeText {
        allow create;
        allow delete: if resource.contentType != 'text/plain';
      }
    }

    match /upload {
      match /allowIfContentTypeImage.png {
        allow create: if request.resource.contentType == 'image/blah';
      }
      match /replace.txt {
        allow read, create;
      }
      match /allowIfNoExistingFile.txt {
        allow create: if resource == null;
      }
    }

    match /public/{allPaths=**} {
      allow read, write;
    }
  }
}

