###-begin-firebase-completion-###

# List of firebase root commands
COMMANDS="appdistribution:distribute appdistribution:testers:add appdistribution:testers:remove apps:android:sha:create apps:android:sha:delete apps:android:sha:list apps:create apps:list apps:sdkconfig auth:export auth:import completion crashlytics:mappingfile:generateid crashlytics:mappingfile:upload crashlytics:symbols:upload database:get database:instances:create database:instances:list database:profile database:push database:remove database:rules:canary database:rules:get database:rules:list database:rules:release database:rules:stage database:set database:settings:get database:settings:set database:update deploy emulators:exec emulators:export emulators:start experimental:functions:shell experiments:describe experiments:disable experiments:enable experiments:list ext:configure ext:dev:deprecate ext:dev:emulators:exec ext:dev:emulators:start ext:dev:delete ext:dev:init ext:dev:list ext:dev:publish ext:dev:register ext:dev:undeprecate ext:dev:unpublish ext:dev:usage ext:export ext:info ext:install ext:list ext:sources:create ext:uninstall ext:update ext firestore:delete firestore:indexes functions:config:clone functions:config:export functions:config:get functions:config:set functions:config:unset functions:delete functions:deletegcfartifacts functions:list functions:log functions:secrets:access functions:secrets:destroy functions:secrets:get functions:secrets:prune functions:secrets:set functions:shell help hosting:channel:create hosting:channel:delete hosting:channel:deploy hosting:channel:list hosting:channel:open hosting:clone hosting:disable hosting:sites:create hosting:sites:delete hosting:sites:get hosting:sites:list init internaltesting:functions:discover login:add login:ci login:list login:use login logout open projects:addfirebase projects:create projects:list remoteconfig:get remoteconfig:rollback remoteconfig:versions:list serve setup:emulators:database setup:emulators:firestore setup:emulators:pubsub setup:emulators:storage setup:emulators:ui target:apply target:clear target:remove target use"

declare -A OPTIONS
# Maps a command to its list of options separated by space
OPTIONS[appdistribution:distribute]="--app --release-notes --release-notes-file --testers --testers-file --groups --groups-file"
OPTIONS[appdistribution:testers:add]="--file"
OPTIONS[appdistribution:testers:remove]="--file"
OPTIONS[apps:android:sha:create]=""
OPTIONS[apps:android:sha:delete]=""
OPTIONS[apps:android:sha:list]=""
OPTIONS[apps:create]="-a --package-name -b --bundle-id -s --app-store-id"
OPTIONS[apps:list]=""
OPTIONS[apps:sdkconfig]="-o --out"
OPTIONS[auth:export]="--format"
OPTIONS[auth:import]="--hash-algo --hash-key --salt-separator --rounds --mem-cost --parallelization --block-size --dk-len --hash-input-order"
OPTIONS[completion]="--shell"
OPTIONS[crashlytics:mappingfile:generateid]="--resource-file"
OPTIONS[crashlytics:mappingfile:upload]="--app --resource-file"
OPTIONS[crashlytics:symbols:upload]="--app --generator --dry-run"
OPTIONS[database:get]="-o --output --pretty --shallow --export --order-by --order-by-key --order-by-value --limit-to-first --limit-to-last --start-at --end-at --equal-to --instance"
OPTIONS[database:instances:create]="-l --location"
OPTIONS[database:instances:list]=""
OPTIONS[database:profile]="-o --output -d --duration --raw --no-collapse -i --input --instance"
OPTIONS[database:push]="-d --data --instance --disable-triggers"
OPTIONS[database:remove]="-f --force --instance --disable-triggers"
OPTIONS[database:rules:canary]="--instance"
OPTIONS[database:rules:get]="--instance"
OPTIONS[database:rules:list]="--instance"
OPTIONS[database:rules:release]="--instance"
OPTIONS[database:rules:stage]="--instance"
OPTIONS[database:set]="-d --data -f --force --instance --disable-triggers"
OPTIONS[database:settings:get]="--instance"
OPTIONS[database:settings:set]="--instance"
OPTIONS[database:update]="-d --data -f --force --instance --disable-triggers"
OPTIONS[deploy]="-f --force -p --public -m --message --only --except"
OPTIONS[emulators:exec]="--only --inspect-functions --import --export-on-exit --ui"
OPTIONS[emulators:export]="-f --force --only"
OPTIONS[emulators:start]="--only --inspect-functions --import --export-on-exit"
OPTIONS[experimental:functions:shell]="-p --port"
OPTIONS[experiments:describe]=""
OPTIONS[experiments:disable]=""
OPTIONS[experiments:enable]=""
OPTIONS[experiments:list]=""
OPTIONS[ext:configure]="-f --force --local"
OPTIONS[ext:dev:deprecate]="-m --message -f --force"
OPTIONS[ext:dev:emulators:exec]="--inspect-functions --test-config --test-params --import --export-on-exit --ui"
OPTIONS[ext:dev:emulators:start]="--inspect-functions --test-config --test-params --import --export-on-exit"
OPTIONS[ext:dev:delete]=""
OPTIONS[ext:dev:init]=""
OPTIONS[ext:dev:list]=""
OPTIONS[ext:dev:publish]="-s --stage -f --force"
OPTIONS[ext:dev:register]=""
OPTIONS[ext:dev:undeprecate]=""
OPTIONS[ext:dev:unpublish]="-f --force"
OPTIONS[ext:dev:usage]=""
OPTIONS[ext:export]="-f --force"
OPTIONS[ext:info]="--markdown"
OPTIONS[ext:install]="--local -f --force"
OPTIONS[ext:list]=""
OPTIONS[ext:sources:create]=""
OPTIONS[ext:uninstall]="--local -f --force"
OPTIONS[ext:update]="--local -f --force"
OPTIONS[ext]=""
OPTIONS[firestore:delete]="-r --recursive --shallow --all-collections -f --force"
OPTIONS[firestore:indexes]="--pretty"
OPTIONS[functions:config:clone]="--from --only --except"
OPTIONS[functions:config:export]=""
OPTIONS[functions:config:get]=""
OPTIONS[functions:config:set]=""
OPTIONS[functions:config:unset]=""
OPTIONS[functions:delete]="--region -f --force"
OPTIONS[functions:deletegcfartifacts]="--regions"
OPTIONS[functions:list]=""
OPTIONS[functions:log]="--only -n --lines --open"
OPTIONS[functions:secrets:access]=""
OPTIONS[functions:secrets:destroy]="-f --force"
OPTIONS[functions:secrets:get]=""
OPTIONS[functions:secrets:prune]="-f --force"
OPTIONS[functions:secrets:set]="-f --force --data-file"
OPTIONS[functions:shell]="-p --port --inspect-functions"
OPTIONS[help]=""
OPTIONS[hosting:channel:create]="-e --expires --site"
OPTIONS[hosting:channel:delete]="-f --force --site"
OPTIONS[hosting:channel:deploy]="-e --expires --only --open --no-authorized-domains"
OPTIONS[hosting:channel:list]="--site"
OPTIONS[hosting:channel:open]="--site"
OPTIONS[hosting:clone]=""
OPTIONS[hosting:disable]="-f --force -s --site"
OPTIONS[hosting:sites:create]="--app"
OPTIONS[hosting:sites:delete]="-f --force"
OPTIONS[hosting:sites:get]=""
OPTIONS[hosting:sites:list]=""
OPTIONS[init]=""
OPTIONS[internaltesting:functions:discover]=""
OPTIONS[login:add]="--no-localhost"
OPTIONS[login:ci]="--no-localhost"
OPTIONS[login:list]=""
OPTIONS[login:use]=""
OPTIONS[login]="--no-localhost --reauth"
OPTIONS[logout]=""
OPTIONS[open]=""
OPTIONS[projects:addfirebase]=""
OPTIONS[projects:create]="-n --display-name -o --organization -f --folder"
OPTIONS[projects:list]=""
OPTIONS[remoteconfig:get]="-v --version-number -o --output"
OPTIONS[remoteconfig:rollback]="-v --version-number -f --force"
OPTIONS[remoteconfig:versions:list]="--limit"
OPTIONS[serve]="-p --port -o --host --only --except"
OPTIONS[setup:emulators:database]=""
OPTIONS[setup:emulators:firestore]=""
OPTIONS[setup:emulators:pubsub]=""
OPTIONS[setup:emulators:storage]=""
OPTIONS[setup:emulators:ui]=""
OPTIONS[target:apply]=""
OPTIONS[target:clear]=""
OPTIONS[target:remove]=""
OPTIONS[target]=""
OPTIONS[use]="--add --alias --unalias --clear"

# If an option of a command needs a parameter, it will be added to this hashmap with "<COMMAND>:<OPTION>" string as its
# key (its value is not important)
declare -A PARAMETERS
PARAMETERS["appdistribution:distribute:--app"]="app_id"
PARAMETERS["appdistribution:distribute:--release-notes"]="string"
PARAMETERS["appdistribution:distribute:--release-notes-file"]="file"
PARAMETERS["appdistribution:distribute:--testers"]="string"
PARAMETERS["appdistribution:distribute:--testers-file"]="file"
PARAMETERS["appdistribution:distribute:--groups"]="string"
PARAMETERS["appdistribution:distribute:--groups-file"]="file"
PARAMETERS["appdistribution:testers:add:--file"]="file"
PARAMETERS["appdistribution:testers:remove:--file"]="file"
PARAMETERS["apps:create:-a"]="packageName"
PARAMETERS["apps:create:--package-name"]="packageName"
PARAMETERS["apps:create:-b"]="bundleId"
PARAMETERS["apps:create:--bundle-id"]="bundleId"
PARAMETERS["apps:create:-s"]="appStoreId"
PARAMETERS["apps:create:--app-store-id"]="appStoreId"
PARAMETERS["apps:sdkconfig:-o"]="file"
PARAMETERS["apps:sdkconfig:--out"]="file"
PARAMETERS["auth:export:--format"]="format"
PARAMETERS["auth:import:--hash-algo"]="hashAlgo"
PARAMETERS["auth:import:--hash-key"]="hashKey"
PARAMETERS["auth:import:--salt-separator"]="saltSeparator"
PARAMETERS["auth:import:--rounds"]="rounds"
PARAMETERS["auth:import:--mem-cost"]="memCost"
PARAMETERS["auth:import:--parallelization"]="parallelization"
PARAMETERS["auth:import:--block-size"]="blockSize"
PARAMETERS["auth:import:--dk-len"]="dkLen"
PARAMETERS["auth:import:--hash-input-order"]="hashInputOrder"
PARAMETERS["completion:--shell"]="shell"
PARAMETERS["crashlytics:mappingfile:generateid:--resource-file"]="resourceFile"
PARAMETERS["crashlytics:mappingfile:upload:--app"]="appID"
PARAMETERS["crashlytics:mappingfile:upload:--resource-file"]="resourceFile"
PARAMETERS["crashlytics:symbols:upload:--app"]="appID"
PARAMETERS["crashlytics:symbols:upload:--generator"]="breakpad|csym"
PARAMETERS["database:get:-o"]="filename"
PARAMETERS["database:get:--output"]="filename"
PARAMETERS["database:get:--order-by"]="key"
PARAMETERS["database:get:--limit-to-first"]="num"
PARAMETERS["database:get:--limit-to-last"]="num"
PARAMETERS["database:get:--start-at"]="val"
PARAMETERS["database:get:--end-at"]="val"
PARAMETERS["database:get:--equal-to"]="val"
PARAMETERS["database:get:--instance"]="instance"
PARAMETERS["database:instances:create:-l"]="location"
PARAMETERS["database:instances:create:--location"]="location"
PARAMETERS["database:profile:-o"]="filename"
PARAMETERS["database:profile:--output"]="filename"
PARAMETERS["database:profile:-d"]="seconds"
PARAMETERS["database:profile:--duration"]="seconds"
PARAMETERS["database:profile:-i"]="filename"
PARAMETERS["database:profile:--input"]="filename"
PARAMETERS["database:profile:--instance"]="instance"
PARAMETERS["database:push:-d"]="data"
PARAMETERS["database:push:--data"]="data"
PARAMETERS["database:push:--instance"]="instance"
PARAMETERS["database:remove:--instance"]="instance"
PARAMETERS["database:rules:canary:--instance"]="instance"
PARAMETERS["database:rules:get:--instance"]="instance"
PARAMETERS["database:rules:list:--instance"]="instance"
PARAMETERS["database:rules:release:--instance"]="instance"
PARAMETERS["database:rules:stage:--instance"]="instance"
PARAMETERS["database:set:-d"]="data"
PARAMETERS["database:set:--data"]="data"
PARAMETERS["database:set:--instance"]="instance"
PARAMETERS["database:settings:get:--instance"]="instance"
PARAMETERS["database:settings:set:--instance"]="instance"
PARAMETERS["database:update:-d"]="data"
PARAMETERS["database:update:--data"]="data"
PARAMETERS["database:update:--instance"]="instance"
PARAMETERS["deploy:-p"]="path"
PARAMETERS["deploy:--public"]="path"
PARAMETERS["deploy:-m"]="message"
PARAMETERS["deploy:--message"]="message"
PARAMETERS["deploy:--only"]="targets"
PARAMETERS["deploy:--except"]="targets"
PARAMETERS["emulators:exec:--only"]="emulators"
PARAMETERS["emulators:exec:--inspect-functions"]="port"
PARAMETERS["emulators:exec:--import"]="dir"
PARAMETERS["emulators:exec:--export-on-exit"]="dir"
PARAMETERS["emulators:export:--only"]="emulators"
PARAMETERS["emulators:start:--only"]="emulators"
PARAMETERS["emulators:start:--inspect-functions"]="port"
PARAMETERS["emulators:start:--import"]="dir"
PARAMETERS["emulators:start:--export-on-exit"]="dir"
PARAMETERS["experimental:functions:shell:-p"]="port"
PARAMETERS["experimental:functions:shell:--port"]="port"
PARAMETERS["ext:dev:deprecate:-m"]="deprecationMessage"
PARAMETERS["ext:dev:deprecate:--message"]="deprecationMessage"
PARAMETERS["ext:dev:emulators:exec:--inspect-functions"]="port"
PARAMETERS["ext:dev:emulators:exec:--test-config"]="firebase.json file"
PARAMETERS["ext:dev:emulators:exec:--test-params"]="params.env file"
PARAMETERS["ext:dev:emulators:exec:--import"]="dir"
PARAMETERS["ext:dev:emulators:exec:--export-on-exit"]="dir"
PARAMETERS["ext:dev:emulators:start:--inspect-functions"]="port"
PARAMETERS["ext:dev:emulators:start:--test-config"]="firebase.json file"
PARAMETERS["ext:dev:emulators:start:--test-params"]="params.env file"
PARAMETERS["ext:dev:emulators:start:--import"]="dir"
PARAMETERS["ext:dev:emulators:start:--export-on-exit"]="dir"
PARAMETERS["ext:dev:publish:-s"]="stage"
PARAMETERS["ext:dev:publish:--stage"]="stage"
PARAMETERS["functions:config:clone:--from"]="projectId"
PARAMETERS["functions:config:clone:--only"]="keys"
PARAMETERS["functions:config:clone:--except"]="keys"
PARAMETERS["functions:delete:--region"]="region"
PARAMETERS["functions:deletegcfartifacts:--regions"]="regions"
PARAMETERS["functions:log:--only"]="function_names"
PARAMETERS["functions:log:-n"]="num_lines"
PARAMETERS["functions:log:--lines"]="num_lines"
PARAMETERS["functions:secrets:set:--data-file"]="dataFile"
PARAMETERS["functions:shell:-p"]="port"
PARAMETERS["functions:shell:--port"]="port"
PARAMETERS["functions:shell:--inspect-functions"]="port"
PARAMETERS["hosting:channel:create:-e"]="duration"
PARAMETERS["hosting:channel:create:--expires"]="duration"
PARAMETERS["hosting:channel:create:--site"]="siteId"
PARAMETERS["hosting:channel:delete:--site"]="siteId"
PARAMETERS["hosting:channel:deploy:-e"]="duration"
PARAMETERS["hosting:channel:deploy:--expires"]="duration"
PARAMETERS["hosting:channel:deploy:--only"]="target1,target2..."
PARAMETERS["hosting:channel:list:--site"]="siteName"
PARAMETERS["hosting:channel:open:--site"]="siteId"
PARAMETERS["hosting:disable:-s"]="siteName"
PARAMETERS["hosting:disable:--site"]="siteName"
PARAMETERS["hosting:sites:create:--app"]="appId"
PARAMETERS["projects:create:-n"]="displayName"
PARAMETERS["projects:create:--display-name"]="displayName"
PARAMETERS["projects:create:-o"]="organizationId"
PARAMETERS["projects:create:--organization"]="organizationId"
PARAMETERS["projects:create:-f"]="folderId"
PARAMETERS["projects:create:--folder"]="folderId"
PARAMETERS["remoteconfig:get:-v"]="versionNumber"
PARAMETERS["remoteconfig:get:--version-number"]="versionNumber"
PARAMETERS["remoteconfig:get:-o"]="filename"
PARAMETERS["remoteconfig:get:--output"]="filename"
PARAMETERS["remoteconfig:rollback:-v"]="versionNumber"
PARAMETERS["remoteconfig:rollback:--version-number"]="versionNumber"
PARAMETERS["remoteconfig:versions:list:--limit"]="maxResults"
PARAMETERS["serve:-p"]="port"
PARAMETERS["serve:--port"]="port"
PARAMETERS["serve:-o"]="host"
PARAMETERS["serve:--host"]="host"
PARAMETERS["serve:--only"]="targets"
PARAMETERS["serve:--except"]="targets"
PARAMETERS["use:--alias"]="name"
PARAMETERS["use:--unalias"]="name"

# If an option of a command accepts a file as its parameter, it will be added to this hashmap with "<COMMAND>:<OPTION>"
# string as its key (its value is not important)
declare -A ACCEPTS_FILE
ACCEPTS_FILE["appdistribution:distribute:--release-notes-file"]="ACCEPTS"
ACCEPTS_FILE["appdistribution:distribute:--testers-file"]="ACCEPTS"
ACCEPTS_FILE["appdistribution:distribute:--groups-file"]="ACCEPTS"
ACCEPTS_FILE["appdistribution:testers:add:--file"]="ACCEPTS"
ACCEPTS_FILE["appdistribution:testers:remove:--file"]="ACCEPTS"
ACCEPTS_FILE["apps:sdkconfig:-o"]="ACCEPTS"
ACCEPTS_FILE["apps:sdkconfig:--out"]="ACCEPTS"
ACCEPTS_FILE["database:get:-o"]="ACCEPTS"
ACCEPTS_FILE["database:get:--output"]="ACCEPTS"
ACCEPTS_FILE["database:profile:-o"]="ACCEPTS"
ACCEPTS_FILE["database:profile:--output"]="ACCEPTS"
ACCEPTS_FILE["database:profile:-i"]="ACCEPTS"
ACCEPTS_FILE["database:profile:--input"]="ACCEPTS"
ACCEPTS_FILE["ext:dev:emulators:exec:--test-config"]="ACCEPTS"
ACCEPTS_FILE["ext:dev:emulators:exec:--test-params"]="ACCEPTS"
ACCEPTS_FILE["ext:dev:emulators:start:--test-config"]="ACCEPTS"
ACCEPTS_FILE["ext:dev:emulators:start:--test-params"]="ACCEPTS"
ACCEPTS_FILE["remoteconfig:get:-o"]="ACCEPTS"
ACCEPTS_FILE["remoteconfig:get:--output"]="ACCEPTS"

_FirebaseToolsTabCompletion()
{
    local cur prev words cword command
    _get_comp_words_by_ref -n : cur prev words cword || return

    COMPREPLY=()
    command=${words[1]}
    
    # No command has been entered completely yet (either not entered at all, or entered incomplete)
    if [ -z "$command" ] || [ "$command" == "$cur" ]
    then
        # Completing commands
        COMPREPLY=( $( compgen -W "$COMMANDS" -- $cur ) )

    # A command has been entered, user is entering options but it is not entering a parameter of an option
    elif [[ "$prev" != -* ]] || [[ "$cur" == -* ]] || ( [[ "$prev" == -* ]] && [ -z "${PARAMETERS[$command:$prev]}" ])
    then
        # Completing options
        local command_options
        command_options="${OPTIONS[$command]}"
        COMPREPLY=( $( compgen -W "$command_options" -- $cur ) )
    # An option is pending a file parameter
    elif [ -n "${ACCEPTS_FILE[$command:$prev]}" ]
    then
        # Completing parameters
        COMPREPLY=( $( compgen -W '$(ls -A)' -- $cur ) )

    # We can't provide any options to the user
    else
        return 1
    fi

    __ltrim_colon_completions "$cur"

    return 0
}

complete -F _FirebaseToolsTabCompletion firebase
###-end-firebase-completion-###
